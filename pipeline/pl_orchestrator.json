{
	"name": "pl_orchestrator",
	"properties": {
		"activities": [
			{
				"name": "get env",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "init_env",
					"value": {
						"value": "@if(contains(toLower(pipeline().DataFactory),'dev')\n,'dev'\n,'prd'\n)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "get env parameters",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "get env",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT  \n\tProcessName, \n\tDatabaseSchemaName, \n\tDatabaseTableName, \n\tIsActive\nFROM [sql-db-adf-metadata].Metadata.DataSource\nWHERE LOWER(EnvironmentName) = '@{variables('init_env')}'\nAND LOWER(ProcessName) = LOWER('@{pipeline().parameters.process_name}');",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadUncommitted",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_metadados",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "is valid process",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "get env parameters",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@if(contains(\n    toLower(activity('get env parameters').output.firstRow['ProcessName']), toLower(pipeline().parameters.process_name))\n    ,'valid_process'\n    ,'Default'\n)",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "valid_process",
							"activities": [
								{
									"name": "run pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ingestion",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								}
							]
						}
					],
					"defaultActivities": [
						{
							"name": "process does not exist",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 3
							}
						}
					]
				}
			}
		],
		"parameters": {
			"process_name": {
				"type": "string",
				"defaultValue": "process_test"
			}
		},
		"variables": {
			"init_env": {
				"type": "String"
			}
		},
		"annotations": []
	}
}